# 2-matrix_divided.py module

# import the module:
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

>>> matrix = [
...     [3, 6, 9],
...     [12, 15, 18]
... ]
>>> print(matrix_divided(matrix, 3))
[[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]

>>> matrix = [
...     [1, -2.2, 3, 4.4, 5],
...     [-6.6, 7.0, 8, 9.999, 10]
... ]
>>> print(matrix_divided(matrix, 3))
[[0.33, -0.73, 1.0, 1.47, 1.67], [-2.2, 2.33, 2.67, 3.33, 3.33]]

>>> matrix = "this isn't working"
>>> print(matrix_divided(matrix, 3))
Traceback (most recent call last):
  ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = [[]]
>>> print(matrix_divided(matrix, 3))
[[]]

>>> matrix = [2, 5, 6]
>>> print(matrix_divided(matrix, 3))
Traceback (most recent call last):
  ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = [
...     [2, 4, 5],
...     [4, "heh", 2]
... ]
>>> print(matrix_divided(matrix, 3))
Traceback (most recent call last):
  ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = [
...     [4, 3, 6, 2],
...     [5, 6, 2]
... ]
>>> print(matrix_divided(matrix, 3))
Traceback (most recent call last):
  ...
TypeError: Each row of the matrix must have the same size

>>> matrix = [
...     [1, 8, 3],
...     [3, 2, 8]
... ]
>>> print(matrix_divided(matrix, "not a number"))
Traceback (most recent call last):
  ...
TypeError: div must be a number

>>> matrix = [
...     [3, 5, 1],
...     [3, 6, 8]
... ]
>>> print(matrix_divided(matrix, None))
Traceback (most recent call last):
  ...
TypeError: div must be a number

>>> print(matrix_divided(matrix, 0))
Traceback (most recent call last):
  ...
ZeroDivisionError: division by zero
